<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="work.licht.music.post.domain.mapper.PostDOMapper">
  <resultMap id="BaseResultMap" type="work.licht.music.post.domain.model.PostDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="creator_id" jdbcType="BIGINT" property="creatorId" />
    <result column="topic_id" jdbcType="BIGINT" property="topicId" />
    <result column="topic_name" jdbcType="VARCHAR" property="topicName" />
    <result column="is_top" jdbcType="BIT" property="isTop" />
    <result column="cover" jdbcType="VARCHAR" property="cover" />
    <result column="content_uuid" jdbcType="VARCHAR" property="contentUuid" />
    <result column="visible" jdbcType="TINYINT" property="visible" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="status" jdbcType="TINYINT" property="status" />
  </resultMap>
  <sql id="Base_Column_List">id, title, creator_id, topic_id, topic_name, is_top,
  cover, content_uuid, visible, create_time, update_time, `status`</sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_post
    where id = #{id,jdbcType=BIGINT} and status = 1
  </select>
  <select id="selectCountByPostId" resultType="int">
    select count(1) from t_post where id = #{postId} and status = 1
  </select>
  <select id="selectCreatorIdByPostId" resultType="long">
    select creator_id from t_post where id = #{postId} and status = 1
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_post
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="work.licht.music.post.domain.model.PostDO">
    insert into t_post (id, title, creator_id,
      topic_id, topic_name, is_top,
      cover, content_uuid, visible,
      create_time, update_time, `status`)
    values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{creatorId,jdbcType=BIGINT},
            #{topicId,jdbcType=BIGINT}, #{topicName,jdbcType=VARCHAR}, #{isTop,jdbcType=BIT},
            #{cover,jdbcType=VARCHAR}, #{contentUuid,jdbcType=VARCHAR}, #{visible,jdbcType=TINYINT},
            #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="work.licht.music.post.domain.model.PostDO">
    insert into t_post
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="creatorId != null">
        creator_id,
      </if>
      <if test="topicId != null">
        topic_id,
      </if>
      <if test="topicName != null">
        topic_name,
      </if>
      <if test="isTop != null">
        is_top,
      </if>
      <if test="cover != null">
        cover,
      </if>
      <if test="contentUuid != null">
        content_uuid,
      </if>
      <if test="visible != null">
        visible,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="status != null">
        `status`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null">
        #{creatorId,jdbcType=BIGINT},
      </if>
      <if test="topicId != null">
        #{topicId,jdbcType=BIGINT},
      </if>
      <if test="topicName != null">
        #{topicName,jdbcType=VARCHAR},
      </if>
      <if test="isTop != null">
        #{isTop,jdbcType=BIT},
      </if>
      <if test="cover != null">
        #{cover,jdbcType=VARCHAR},
      </if>
      <if test="contentUuid != null">
        #{contentUuid,jdbcType=VARCHAR},
      </if>
      <if test="visible != null">
        #{visible,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="work.licht.music.post.domain.model.PostDO">
    update t_post
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null">
        creator_id = #{creatorId,jdbcType=BIGINT},
      </if>
      <if test="topicId != null">
        topic_id = #{topicId,jdbcType=BIGINT},
      </if>
      <if test="topicName != null">
        topic_name = #{topicName,jdbcType=VARCHAR},
      </if>
      <if test="isTop != null">
        is_top = #{isTop,jdbcType=BIT},
      </if>
      <if test="cover != null">
        cover = #{cover,jdbcType=VARCHAR},
      </if>
      <if test="contentUuid != null">
        content_uuid = #{contentUuid,jdbcType=VARCHAR},
      </if>
      <if test="visible != null">
        visible = #{visible,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="work.licht.music.post.domain.model.PostDO">
    update t_post
    set title = #{title,jdbcType=VARCHAR},
      topic_id = #{topicId,jdbcType=BIGINT},
      topic_name = #{topicName,jdbcType=VARCHAR},
      cover = #{cover,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateVisible" parameterType="work.licht.music.post.domain.model.PostDO">
    update t_post
    set visible = #{visible,jdbcType=TINYINT},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT} and creator_id = #{creatorId,jdbcType=BIGINT}
  </update>
  <update id="updateIsTop" parameterType="work.licht.music.post.domain.model.PostDO">
    update t_post
    set is_top = #{isTop,jdbcType=BIT},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT} and creator_id = #{creatorId,jdbcType=BIGINT}
  </update>
</mapper>