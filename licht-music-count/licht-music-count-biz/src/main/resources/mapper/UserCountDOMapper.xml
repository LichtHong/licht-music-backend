<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="work.licht.music.count.domain.mapper.UserCountDOMapper">
  <resultMap id="BaseResultMap" type="work.licht.music.count.domain.model.UserCountDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="follower_total" jdbcType="BIGINT" property="followerTotal" />
    <result column="following_total" jdbcType="BIGINT" property="followingTotal" />
    <result column="publish_total" jdbcType="BIGINT" property="publishTotal" />
    <result column="like_total" jdbcType="BIGINT" property="likeTotal" />
    <result column="collect_total" jdbcType="BIGINT" property="collectTotal" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, follower_total, following_total, publish_total, like_total, collect_total
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user_count
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_user_count
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="work.licht.music.count.domain.model.UserCountDO">
    insert into t_user_count (id, user_id, follower_total,
      following_total, publish_total, like_total,
      collect_total)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{followerTotal,jdbcType=BIGINT}, 
      #{followingTotal,jdbcType=BIGINT}, #{publishTotal,jdbcType=BIGINT}, #{likeTotal,jdbcType=BIGINT},
      #{collectTotal,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="work.licht.music.count.domain.model.UserCountDO">
    insert into t_user_count
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="followerTotal != null">
        follower_total,
      </if>
      <if test="followingTotal != null">
        following_total,
      </if>
      <if test="publishTotal != null">
        publish_total,
      </if>
      <if test="likeTotal != null">
        like_total,
      </if>
      <if test="collectTotal != null">
        collect_total,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="followerTotal != null">
        #{followerTotal,jdbcType=BIGINT},
      </if>
      <if test="followingTotal != null">
        #{followingTotal,jdbcType=BIGINT},
      </if>
      <if test="publishTotal != null">
        #{publishTotal,jdbcType=BIGINT},
      </if>
      <if test="likeTotal != null">
        #{likeTotal,jdbcType=BIGINT},
      </if>
      <if test="collectTotal != null">
        #{collectTotal,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <insert id="insertOrUpdateFanTotalByUserId" parameterType="map">
    INSERT INTO t_user_count (user_id, follower_total)
    VALUES (#{userId}, #{count})
    ON DUPLICATE KEY UPDATE follower_total = follower_total + (#{count});
  </insert>
  <insert id="insertOrUpdateLikeTotalByUserId" parameterType="map">
    INSERT INTO t_user_count (user_id, like_total)
    VALUES (#{userId}, #{count})
    ON DUPLICATE KEY UPDATE like_total = like_total + (#{count});
  </insert>
  <insert id="insertOrUpdateCollectTotalByUserId" parameterType="map">
    INSERT INTO t_user_count (user_id, collect_total)
    VALUES (#{userId}, #{count})
    ON DUPLICATE KEY UPDATE collect_total = collect_total + (#{count});
  </insert>
  <insert id="insertOrUpdatePostTotalByUserId" parameterType="map">
    INSERT INTO t_user_count (user_id, publish_total)
    VALUES (#{userId}, #{count})
    ON DUPLICATE KEY UPDATE publish_total = publish_total + (#{count});
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="work.licht.music.count.domain.model.UserCountDO">
    update t_user_count
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="followerTotal != null">
        follower_total = #{followerTotal,jdbcType=BIGINT},
      </if>
      <if test="followingTotal != null">
        following_total = #{followingTotal,jdbcType=BIGINT},
      </if>
      <if test="publishTotal != null">
        publish_total = #{publishTotal,jdbcType=BIGINT},
      </if>
      <if test="likeTotal != null">
        like_total = #{likeTotal,jdbcType=BIGINT},
      </if>
      <if test="collectTotal != null">
        collect_total = #{collectTotal,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="work.licht.music.count.domain.model.UserCountDO">
    update t_user_count
    set user_id = #{userId,jdbcType=BIGINT},
      follower_total = #{followerTotal,jdbcType=BIGINT},
      following_total = #{followingTotal,jdbcType=BIGINT},
      publish_total = #{publishTotal,jdbcType=BIGINT},
      like_total = #{likeTotal,jdbcType=BIGINT},
      collect_total = #{collectTotal,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>